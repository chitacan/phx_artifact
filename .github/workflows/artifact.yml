name: generate artifacts
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  documentation:
    name: generate ex_doc & db doc
    runs-on: ubuntu-latest
    services:
      pg:
        image: postgres:10.7
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.1.7
          elixir-version: 1.9.4
      - name: genereate doc
        run: |
          mix deps.get
          mix ecto.create
          mix ecto.migrate
          mix docs
      - name: run schemacrawler
        run: |
          docker run -v `pwd`/doc:/home/schcrwlr --network "${{ job.services.pg.network }}" --rm --user root schemacrawler/schemacrawler:v16.2.7 /opt/schemacrawler/schemacrawler.sh --server=postgresql --host=pg --database=artifacts --user=postgres --password=postgres -c=schema --info-level=maximum --output-format=htmlx -o=/home/schcrwlr/db.html
      - name: deploy to now
        run: now --token ${{ secrets.NOW_TOKEN }} -n phx_artifact doc/

  analysis:
    name: run static analysis
    runs-on: ubuntu-latest
    env:
      REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.1.7
          elixir-version: 1.9.4
      - name: setup reviewdog
        run: |
          mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin
          echo ::add-path::$HOME/bin
      - uses: actions/checkout@v1
      - run: |
          mix deps.get
      - run: mkdir -p priv/plts
      - name: cache plt
        uses: actions/cache@v1
        with:
          path: priv/plts
          key: changer-plt-v1-${{ hashFiles('mix.lock') }}
      - name: run credo and report
        run: |
          mix credo suggest --strict --format=flycheck \
            | reviewdog -efm="%f:%l:%c: %t: %m" -efm="%f:%l: %t: %m" -name="credo" -reporter="github-pr-check" -level="warning"
      - name: run dialyzer and report
        run: |
          mix dialyzer --format short 2>&1 \
          | reviewdog -efm="%f:%l:%*[a-z|_] %m" -name="dialyzer" -reporter="github-pr-check" -diff="git diff master" -level="warning"

  coverage:
    name: generate test coverage report
    runs-on: ubuntu-latest
    services:
      pg:
        image: postgres:10.7
        ports:
          - 5432:5432
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.1.7
          elixir-version: 1.9.4
      - name: report
        run: |
          mix deps.get
          mix coveralls.github
